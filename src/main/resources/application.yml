spring:
  datasource:
    # 动态数据源配置
    dynamic:
      datasource:
        master:
          type: com.alibaba.druid.pool.DruidDataSource
          driver-class-name: com.mysql.cj.jdbc.Driver
          url: jdbc:mysql://localhost:3306/user_db?characterEncoding=utf-8&useUnicode=true&useSSL=false&serverTimezone=UTC
          username: root
          password: 123456
      # 指定默认数据源名称
      primary: master
  # 分表配置
  shardingsphere:
    datasource:
      names: sharding-crawler,sharding-rain
      sharding-crawler:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/crawler?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&useTimezone=true
        username: root
        password: 123456
      sharding-rain:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/crawler1?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT%2B8&useTimezone=true
        username: root
        password: 123456
    props:
      # 日志显示SQL
      sql.show: true
    sharding:
      tables:
        # 订单表 分表：20
        river:
          # 真实表 order_0
          actualDataNodes: sharding-crawler.river_$->{0..5}
          # 分库策略
          databaseStrategy:
            none:
          # 分表策略
          tableStrategy:
            inline:
              shardingColumn: id
              # 分片算法行表达式，需符合groovy语法 '& Integer.MAX_VALUE' 位运算使hash值为正数
              algorithmExpression: river_$->{(id.hashCode() & Integer.MAX_VALUE) % 6}
        # 此处名称要对应实体
        rain:
          # 真实表 order_0
          actualDataNodes: sharding-rain.rain_$->{0..5}
          # 分库策略
          databaseStrategy:
            none:
          # 分表策略
          tableStrategy:
            inline:
              shardingColumn: id
              # 分片算法行表达式，需符合groovy语法 '& Integer.MAX_VALUE' 位运算使hash值为正数
              algorithmExpression: rain_$->{(id.hashCode() & Integer.MAX_VALUE) % 6}
        test:
          # 真实表 order_0
          actualDataNodes: sharding-crawler.test_$->{0..2}
          # 分库策略
          databaseStrategy:
            none:
          # 分表策略
          tableStrategy:
            inline:
              shardingColumn: id
              # 分片算法行表达式，需符合groovy语法 '& Integer.MAX_VALUE' 位运算使hash值为正数
              algorithmExpression: test_$->{(id.hashCode() & Integer.MAX_VALUE) % 3}

